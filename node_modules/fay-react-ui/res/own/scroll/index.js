import _objectSpread from "@babel/runtime-corejs2/helpers/objectSpread";
import _inheritsLoose from "@babel/runtime-corejs2/helpers/inheritsLoose";
import _assertThisInitialized from "@babel/runtime-corejs2/helpers/assertThisInitialized";
import _defineProperty from "@babel/runtime-corejs2/helpers/defineProperty";
import React, { Component } from 'react';
import classnames from 'classnames';
import './style/index.less';

var Index =
/*#__PURE__*/
function (_Component) {
  _inheritsLoose(Index, _Component);

  function Index(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "state", {
      bar: false,
      top: 0,
      left: 0,
      barYTop: 0,
      barXLeft: 0,
      barYHeight: 0,
      barXWidth: 0,
      mouseDownBarY: undefined,
      mouseDownBarX: undefined,
      scrollWidth: undefined,
      scrollHeight: undefined
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "step", 100);

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onMouseEnter", function () {
      _this.setState({
        bar: true
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onMouseLeave", function () {
      _this.setState({
        bar: false
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "scrollY", function (e) {
      e.preventDefault();
      e.stopPropagation();
      var height = _this.renderDataRef.current.offsetHeight;
      var scrollHeight = _this.scrollRef.current.offsetHeight;
      if (height > scrollHeight) e.stopPropagation();
      var h = height + _this.state.top - scrollHeight;

      if (e.deltaY < 0) {
        if (_this.state.top < 0) {
          var top = _this.state.top > -1 * _this.step ? 0 : _this.state.top + _this.step;
          var barYTop = top / height * -1 * scrollHeight + _this.state.barYHeight - scrollHeight;

          _this.setState({
            top: top,
            barYTop: barYTop
          });
        }
      } else if (e.deltaY > 0) {
        if (h > 0) {
          var _top = _this.state.top - (h < _this.step ? h : _this.step);

          var _barYTop = _top / height * -1 * scrollHeight + _this.state.barYHeight - scrollHeight;

          _this.setState({
            top: _top,
            barYTop: _barYTop
          });
        }
      }
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "mouseDownBarY", function (e) {
      e.preventDefault();

      _this.setState({
        mouseDownBarY: e.clientY
      });

      document.addEventListener('mousemove', _this.moveY, false);
      document.addEventListener('mouseup', _this.mouseUpBarY, false);
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "mouseUpBarY", function () {
      _this.setState({
        mouseDownBarY: undefined
      });

      document.removeEventListener('mousemove', _this.moveY, false);
      document.removeEventListener('mouseup', _this.mouseUpBarY, false);
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "moveY", function (e) {
      var _this$state = _this.state,
          mouseDownBarY = _this$state.mouseDownBarY,
          barYTop = _this$state.barYTop,
          barYHeight = _this$state.barYHeight;

      if (mouseDownBarY) {
        var moveY = e.clientY - mouseDownBarY + barYTop;
        var height = _this.renderDataRef.current.offsetHeight;
        var scrollHeight = _this.scrollRef.current.offsetHeight;

        if (-1 * moveY + _this.state.barYHeight > scrollHeight) {
          moveY = barYHeight - scrollHeight;
        } else if (!(barYTop > 0) && moveY > 0) {
          moveY = 0;
        }

        var top = height / scrollHeight * (moveY + scrollHeight - barYHeight) * -1;

        _this.setState({
          top: top,
          barYTop: moveY,
          mouseDownBarY: e.clientY
        });
      }
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "mouseDownBarX", function (e) {
      e.preventDefault();

      _this.setState({
        mouseDownBarX: e.clientX
      });

      document.addEventListener('mousemove', _this.moveX, false);
      document.addEventListener('mouseup', _this.mouseUpBarX, false);
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "mouseUpBarX", function () {
      _this.setState({
        mouseDownBarX: undefined
      });

      document.removeEventListener('mousemove', _this.moveX, false);
      document.removeEventListener('mouseup', _this.mouseUpBarX, false);
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "moveX", function (e) {
      var _this$state2 = _this.state,
          mouseDownBarX = _this$state2.mouseDownBarX,
          barXLeft = _this$state2.barXLeft;

      if (mouseDownBarX) {
        var moveX = e.clientX - mouseDownBarX + barXLeft;
        var width = _this.renderDataRef.current.offsetWidth;
        var scrollWidth = _this.scrollRef.current.offsetWidth;

        if (moveX + _this.state.barXWidth > scrollWidth) {
          moveX = scrollWidth - _this.state.barXWidth;
        } else if (!(barXLeft < 0) && moveX < 0) {
          moveX = 0;
        }

        var left = width / scrollWidth * moveX * -1;

        _this.setState({
          left: left,
          barXLeft: moveX,
          mouseDownBarX: e.clientX
        });
      }
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "resize", function () {
      var scrollWidth = 0;
      var scrollHeight = 0;
      var docWidth = 0;
      var docHeight = 0;
      var height = undefined;
      var maxHeight = _this.props.maxHeight;

      try {
        scrollWidth = _this.scrollRef.current.offsetWidth;
        scrollHeight = _this.scrollRef.current.offsetHeight;
        docWidth = _this.renderDataRef.current.offsetWidth;
        docHeight = _this.renderDataRef.current.offsetHeight;
      } catch (e) {
        console.log(e);
      }

      if (scrollWidth > 0 && scrollHeight > 0 && docWidth > 0 && docHeight > 0) {
        var barXWidth = scrollWidth * scrollWidth / docWidth;
        var barYHeight = scrollHeight * scrollHeight / docHeight;
        (barXWidth > docWidth || barXWidth === docWidth) && (barXWidth = 0);
        (barYHeight > docHeight || barYHeight === docHeight) && (barYHeight = 0);
        var barYTop = _this.state.top / docHeight * -1 * scrollHeight + barYHeight - scrollHeight;
        var top = _this.state.top;

        if (barYTop > 0) {
          barYTop = 0;
          top = (barYHeight / scrollHeight - 1) * docHeight;
        }

        var barXLeft = _this.state.left / docWidth * -1 * scrollWidth;
        var left = _this.state.left;

        if (barXLeft > scrollWidth - barXWidth) {
          barXLeft = scrollWidth - barXWidth;
          left = (barXWidth / scrollWidth - 1) * docWidth;
        }

        if (maxHeight) {
          if (docHeight > maxHeight) {
            height = maxHeight;
          } else {
            height = docHeight;
            barYHeight = 0;
            barXWidth = 0;
          }
        }

        _this.setState({
          top: top,
          barYTop: barYTop,
          barYHeight: barYHeight,
          barXWidth: barXWidth,
          barXLeft: barXLeft,
          left: left,
          height: height
        });
      }
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "mount", false);

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "resizeWithTime", function () {
      if (_this.mount) {
        _this.resize();

        setTimeout(_this.resizeWithTime, 1000);
      }
    });

    _this.scrollRef = React.createRef();
    _this.renderDataRef = React.createRef();
    return _this;
  }

  var _proto = Index.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.mount = true;
    this.resizeWithTime();
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.mount = false;
  };

  _proto.render = function render() {
    var _this$state3 = this.state,
        bar = _this$state3.bar,
        top = _this$state3.top,
        left = _this$state3.left,
        barYTop = _this$state3.barYTop,
        barYHeight = _this$state3.barYHeight,
        barXLeft = _this$state3.barXLeft,
        barXWidth = _this$state3.barXWidth,
        height = _this$state3.height;
    var _this$props = this.props,
        style = _this$props.style,
        className = _this$props.className,
        children = _this$props.children,
        width = _this$props.width;
    var stylePrefix = 'rj-scroll';
    var newStyle = height ? _objectSpread({}, style, {
      height: height
    }) : style;
    return React.createElement("div", {
      style: _objectSpread({}, newStyle),
      className: classnames(stylePrefix, className)
    }, React.createElement("div", {
      onMouseEnter: this.onMouseEnter,
      onMouseLeave: this.onMouseLeave,
      className: classnames(stylePrefix + '-main', barYHeight === 0 ? stylePrefix + '-main-y-hidden' : '', barXWidth === 0 ? stylePrefix + '-main-x-hidden' : ''),
      onWheel: this.scrollY,
      ref: this.scrollRef
    }, React.createElement("div", {
      style: {
        top: top,
        left: left,
        width: width
      },
      className: stylePrefix + '-main-content',
      ref: this.renderDataRef
    }, children)), React.createElement("div", {
      onMouseEnter: this.onMouseEnter,
      onMouseLeave: this.onMouseLeave,
      onMouseDown: this.mouseDownBarY,
      onMouseOver: this.mouseUpBarY,
      onMouseMove: this.moveY,
      style: {
        top: barYTop,
        height: barYHeight
      },
      className: classnames(stylePrefix + '-bar-y', bar ? stylePrefix + '-bar-show' : stylePrefix + '-bar-hidden')
    }), React.createElement("div", {
      onMouseEnter: this.onMouseEnter,
      onMouseLeave: this.onMouseLeave,
      onMouseDown: this.mouseDownBarX,
      onMouseOver: this.mouseUpBarX,
      onMouseMove: this.moveX,
      style: {
        left: barXLeft,
        width: barXWidth
      },
      className: classnames(stylePrefix + '-bar-x', bar ? stylePrefix + '-bar-show' : stylePrefix + '-bar-hidden')
    }));
  };

  return Index;
}(Component); //已过期，暂不使用
// export default Index;