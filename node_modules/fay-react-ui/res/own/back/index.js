import _inheritsLoose from "@babel/runtime-corejs2/helpers/inheritsLoose";
import _assertThisInitialized from "@babel/runtime-corejs2/helpers/assertThisInitialized";
import _defineProperty from "@babel/runtime-corejs2/helpers/defineProperty";
import React from 'react';
import Icon from '../../../icon';
import Scroll from '../../../customScroll';
import './style/index.less';
import classnames from 'classnames';
import { decodeHash } from "rj-lib/location/hash";
import { withRouter } from "react-router-dom";
var stylePrefix = 'rj-back';

var Back =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(Back, _React$Component);

  function Back() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onBack", function () {
      var _this$props = _this.props,
          location = _this$props.location,
          history = _this$props.history;
      var backLocation = decodeHash(location.hash).hash;

      if (backLocation === undefined || backLocation === '') {
        console.error('缺少返回地址');
      } else {
        history.push(backLocation);
      }
    });

    return _this;
  }

  var _proto = Back.prototype;

  _proto.shouldComponentUpdate = function shouldComponentUpdate() {
    return false;
  };

  _proto.render = function render() {
    var _this$props2 = this.props,
        title = _this$props2.title,
        children = _this$props2.children,
        style = _this$props2.style,
        className = _this$props2.className;
    var top = React.createElement("div", {
      className: stylePrefix + '-top'
    }, React.createElement("div", {
      className: stylePrefix + '-top-nav'
    }, title), React.createElement("div", {
      className: stylePrefix + '-top-back'
    }, React.createElement("span", {
      className: stylePrefix + '-top-back-link',
      onClick: this.onBack
    }, React.createElement(Icon, {
      type: "close",
      bold: true
    }))));
    return children ? React.createElement("div", {
      className: classnames(stylePrefix, className),
      style: style
    }, top, React.createElement(Scroll, {
      className: stylePrefix + '-scroll'
    }, children)) : React.createElement("div", {
      className: className,
      style: style
    }, top);
  };

  return Back;
}(React.Component);

export default withRouter(Back);