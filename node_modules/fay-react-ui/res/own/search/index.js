import _extends from "@babel/runtime-corejs2/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime-corejs2/helpers/objectWithoutPropertiesLoose";
import _inheritsLoose from "@babel/runtime-corejs2/helpers/inheritsLoose";

/**
 * Created by Administrator on 2018/6/22.
 */
import React, { Component } from "react";
import PropTypes from "prop-types";
import Input from 'rjd/input';
var lastInputTime, inputValue;

function onChangeSearch(e, delay, onChange, onDelayChange) {
  onChange(e);
  lastInputTime = new Date();
  inputValue = e.target.value;
  setTimeout(function () {
    var now = new Date();

    if (now - lastInputTime >= delay) {
      onDelayChange(inputValue);
    }
  }, delay);
}

var Search =
/*#__PURE__*/
function (_Component) {
  _inheritsLoose(Search, _Component);

  function Search(props) {
    return _Component.call(this, props) || this;
  }

  var _proto = Search.prototype;

  _proto.render = function render() {
    var _this = this;

    var _this$props = this.props,
        delay = _this$props.delay,
        _onChange = _this$props.onChange,
        onDelayChange = _this$props.onDelayChange,
        searchProps = _objectWithoutPropertiesLoose(_this$props, ["delay", "onChange", "onDelayChange"]);

    return React.createElement(Input, _extends({}, searchProps, {
      onChange: function onChange(e) {
        return onChangeSearch.call(_this, e, delay, _onChange, onDelayChange);
      }
    }));
  };

  return Search;
}(Component);

export { Search as default };
Search.propTypes = {
  delay: PropTypes.number,
  onChange: PropTypes.func
};
Search.defaultProps = {
  delay: 500
};