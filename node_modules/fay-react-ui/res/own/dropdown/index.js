import _objectSpread from "@babel/runtime-corejs2/helpers/objectSpread";
import _inheritsLoose from "@babel/runtime-corejs2/helpers/inheritsLoose";
import _assertThisInitialized from "@babel/runtime-corejs2/helpers/assertThisInitialized";
import _defineProperty from "@babel/runtime-corejs2/helpers/defineProperty";
import React from 'react';
import Dropdown from '../../antd/dropdown';
import Menu from '../../antd/menu';
import './style/index.less';
import classnames from 'classnames';

var Index =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(Index, _React$Component);

  function Index() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "handleClick", function (e) {
      e.stopPropagation();
    });

    return _this;
  }

  var _proto = Index.prototype;

  _proto.render = function render() {
    var stylePrefix = 'rj-dropdown';
    var content = React.createElement(Menu, {
      selectable: true,
      className: stylePrefix + '-menu'
    }, React.createElement(Menu.Item, null, React.createElement("div", {
      onClick: this.handleClick,
      className: stylePrefix + '-content'
    }, this.props.overlay)));
    return React.createElement(Dropdown, _objectSpread({}, this.props, {
      overlay: content,
      className: classnames(stylePrefix, this.props.className)
    }), this.props.children);
  };

  return Index;
}(React.Component);

export { Index as default };