import _inheritsLoose from "@babel/runtime-corejs2/helpers/inheritsLoose";
import _assertThisInitialized from "@babel/runtime-corejs2/helpers/assertThisInitialized";
import _defineProperty from "@babel/runtime-corejs2/helpers/defineProperty";

/**
 * Created by feichongzheng on 17/9/12.
 */
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { injectAsyncStore, rejectAsyncStore } from './store';

var Bundle =
/*#__PURE__*/
function (_Component) {
  _inheritsLoose(Bundle, _Component);

  function Bundle() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Component.call.apply(_Component, [this].concat(args)) || this;

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "state", {
      mod: null,
      reducer: null
    });

    return _this;
  }

  var _proto = Bundle.prototype;

  _proto.componentWillMount = function componentWillMount() {
    this._isMounted = true;
    this.load(this.props);
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this._isMounted = false;
    if (this.props.cache === false) rejectAsyncStore(this.state.reducer);
  };

  _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    if (nextProps.load !== this.props.load) {
      this.load(nextProps);
    }
  };

  _proto.load = function load(props) {
    var _this2 = this;

    this.setState({
      mod: null
    });
    props.load(function (mod) {
      var reducer = mod.reducer,
          view = mod.view,
          sagas = mod.sagas;
      injectAsyncStore(_this2.context.store, reducer, sagas);

      if (_this2._isMounted) {
        var v = view || mod;

        _this2.setState({
          mod: v['default'] ? v['default'] : v,
          reducer: reducer
        });
      }
    });
  };

  _proto.render = function render() {
    var mod = this.state.mod;
    var _this$props = this.props,
        children = _this$props.children,
        defaultComponent = _this$props.defaultComponent;
    return mod ? children(mod) : defaultComponent ? {
      defaultComponent: defaultComponent
    } : React.createElement("div", null, "loading...");
  };

  return Bundle;
}(Component);

_defineProperty(Bundle, "propTypes", {
  load: PropTypes.any,
  children: PropTypes.any,
  defaultComponent: PropTypes.any,
  cache: PropTypes.bool
});

_defineProperty(Bundle, "contextTypes", {
  store: PropTypes.object
});

export default Bundle;