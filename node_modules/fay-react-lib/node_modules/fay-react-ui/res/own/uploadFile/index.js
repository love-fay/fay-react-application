import _inheritsLoose from "@babel/runtime-corejs2/helpers/inheritsLoose";
import _assertThisInitialized from "@babel/runtime-corejs2/helpers/assertThisInitialized";
import _defineProperty from "@babel/runtime-corejs2/helpers/defineProperty";
import React from 'react';
import ReactDom from 'react-dom';
import './style/index.less';

var uploadFile =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(uploadFile, _React$Component);

  function uploadFile(props) {
    var _this;

    _this = _React$Component.call(this, props) || this;

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onChange", function () {
      var fileInput = _this.ref.current;
      var file = fileInput.files[0];

      if (file) {
        var reader = new FileReader();
        reader.readAsArrayBuffer(file);

        reader.onload = function () {
          var arrayBuffer = reader.result;

          _this.props.onChange(arrayBuffer);
        };
      } else {
        _this.props.onChange();
      }
    });

    _this.ref = React.createRef();
    return _this;
  }

  var _proto = uploadFile.prototype;

  _proto.componentDidMount = function componentDidMount() {// this.onChange();
  };

  _proto.render = function render() {
    return React.createElement("input", {
      ref: this.ref,
      type: "file",
      onChange: this.onChange
    });
  };

  return uploadFile;
}(React.Component);

export { uploadFile as default };