/**
 * Created by Administrator on 2018/8/14.
 */
import React from "react";
import Radio from "../../../../radio";
var stylePrefix = 'rj-rySelector-latelyContactorsBox';
var RadioGroup = Radio.Group;

function onChangeRadioGroup(e, latelyContactors, onChange) {
  var filter = latelyContactors.filter(function (ryItem) {
    return ryItem.username === e.target.value;
  });
  onChange(filter);
}

var RidioDiv = function RidioDiv(_ref) {
  var value = _ref.value,
      label = _ref.label;
  return React.createElement("div", {
    className: stylePrefix + '-radio'
  }, React.createElement(Radio, {
    value: value
  }, React.createElement("span", {
    className: "textOverflow",
    title: label
  }, label)));
};

export default (function (_ref2) {
  var selectedRys = _ref2.selectedRys,
      _onChange = _ref2.onChange;
  var latelyContactors = JSON.parse(localStorage.getItem("latelyContactors"));
  var options = [],
      checkedValues = [];

  if (latelyContactors) {
    options = latelyContactors.map(function (item) {
      if (selectedRys.filter(function (selectedRyItem) {
        return selectedRyItem.username == item.username;
      }).length > 0) {
        checkedValues.push(item.username);
      }

      return {
        label: item.nickname,
        value: item.username
      };
    });
  }

  return React.createElement("div", null, React.createElement("div", null, React.createElement("span", {
    style: {
      fontWeight: "bold"
    }
  }, "\u6700\u8FD1\u4F7F\u7528")), React.createElement("div", null, React.createElement(RadioGroup, {
    value: checkedValues[0],
    onChange: function onChange(e) {
      return onChangeRadioGroup(e, latelyContactors, _onChange);
    }
  }, options.map(function (item) {
    return React.createElement(RidioDiv, {
      key: item.value,
      value: item.value,
      label: item.label
    });
  }))));
});