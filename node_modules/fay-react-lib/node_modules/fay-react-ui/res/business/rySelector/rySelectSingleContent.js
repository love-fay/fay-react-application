import _inheritsLoose from "@babel/runtime-corejs2/helpers/inheritsLoose";
import _assertThisInitialized from "@babel/runtime-corejs2/helpers/assertThisInitialized";
import _getIterator from "@babel/runtime-corejs2/core-js/get-iterator";
import _JSON$stringify from "@babel/runtime-corejs2/core-js/json/stringify";

/**
 * Created by Administrator on 2018/5/18.
 */
import React, { Component } from "react";
import PropTypes from "prop-types";
import Card from "../../../card";
import Scroll from "../../../customScroll";
import Search from "../../../search";
import Icon from '../../../icon';
import QueryList from "./queryList";
import RyTree from "./ryTree";
import { loginUser } from "rj-lib/user";
import { userSelect } from "./api";
import "./style/index.less";
var userInfo = loginUser();
var latelyContactorsSize = 20; //最多存储最近联系人个数

function onClickSearchClear() {
  var pagination = this.state.pagination;
  pagination.current = 1;
  pagination.pageSize = 10;
  pagination.total = 0;
  this.setState({
    tableData: [],
    pagination: pagination,
    searchValue: ''
  });
}

function onChangeSearch(str) {
  if (str !== "") {
    fetchTableData.call(this, {
      str: str,
      current: this.state.pagination.current,
      pageSize: this.state.pagination.pageSize
    });
  } else {
    var pagination = this.state.pagination;
    pagination.current = 1;
    pagination.pageSize = 10;
    pagination.total = 0;
    this.setState({
      tableData: [],
      pagination: pagination
    });
  }
}

function onPressEnterSearch(e) {
  var str = e.target.value;
  this.setState({
    searchValue: str
  });

  if (str !== "") {
    fetchTableData.call(this, {
      str: str,
      current: this.state.pagination.current,
      pageSize: this.state.pagination.pageSize
    });
  }
}

function fetchTableData(_ref) {
  var _this = this;

  var str = _ref.str,
      current = _ref.current,
      pageSize = _ref.pageSize;
  var userRange = this.props.userRange;
  var currentPage = current - 1;
  var fyfjm = parseInt(userRange) === 3 && userInfo ? userInfo.fyfjm : "";
  var params = {
    queryStr: str,
    page: currentPage,
    size: pageSize,
    fyfjm: fyfjm
  };
  userSelect.findUserDTOPage(params).then(function (res) {
    return res.json();
  }).then(function (res) {
    if (res.code === "success" && res.data) {
      var pagination = _this.state.pagination;
      pagination.current = current;
      pagination.pageSize = pageSize;
      pagination.total = res.data.totalElements;
      var arr = [];
      res.data.content.forEach(function (item) {
        arr.push({
          id: item.userid,
          username: item.username,
          value: item.username,
          nickname: item.nickname,
          label: item.nickname,
          phone: item.phone,
          zj: item.zj,
          zw: item.zw,
          rybs: item.rybs,
          orgName: item.orgName,
          departmentName: item.departmentName,
          dfsId: item.dfsId,
          departmentInfo: (item.departmentName ? item.departmentName : "") + " / " + (item.orgName ? item.orgName : null),
          fyfjm: item.fyfjm,
          bmbs: item.bmbs
        });
      });

      _this.setState({
        tableData: arr,
        pagination: pagination
      });
    }
  });
}

function onOkModal(selectedRys) {
  var latelyContactors = selectedRys.concat();

  if (latelyContactors.length > latelyContactorsSize) {
    latelyContactors.splice(latelyContactorsSize);
    window.localStorage.setItem("latelyContactors", _JSON$stringify(latelyContactors));
  } else {
    var data = JSON.parse(localStorage.getItem("latelyContactors"));

    if (data) {
      var _loop = function _loop() {
        if (_isArray) {
          if (_i >= _iterator.length) return "break";
          _ref2 = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) return "break";
          _ref2 = _i.value;
        }

        var item = _ref2;

        if (latelyContactors.length > latelyContactorsSize - 1) {
          return "break";
        }

        var ts = latelyContactors.filter(function (contactor) {
          return contactor.username === item.username;
        });

        if (ts.length === 0) {
          latelyContactors.push(item);
        }
      };

      for (var _iterator = data, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {
        var _ref2;

        var _ret = _loop();

        if (_ret === "break") break;
      }
    }

    window.localStorage.setItem("latelyContactors", _JSON$stringify(latelyContactors));
  }

  this.props.onSelect && this.props.onSelect(selectedRys);
}

function onClickList(id, username, nickname, rybs, orgName, departmentName, fyfjm, bmbs) {
  onClickSearchClear.call(this);
  onOkModal.call(this, [{
    id: id,
    username: username,
    nickname: nickname,
    rybs: rybs,
    orgName: orgName,
    departmentName: departmentName,
    fyfjm: fyfjm,
    bmbs: bmbs
  }]);
}

var RySelectSingleContent =
/*#__PURE__*/
function (_Component) {
  _inheritsLoose(RySelectSingleContent, _Component);

  function RySelectSingleContent(props) {
    var _this2;

    _this2 = _Component.call(this, props) || this;
    _this2.state = {
      tableData: [],
      pagination: {
        size: "small",
        showTotal: function showTotal(total, range) {
          return "\u603B\u8BA1 " + total + " \u6761";
        },
        current: 1,
        pageSize: 14,
        total: 0,
        onChange: function onChange(current, pageSize) {
          return fetchTableData.call(_assertThisInitialized(_assertThisInitialized(_this2)), {
            str: _this2.state.searchValue,
            current: current,
            pageSize: pageSize
          });
        }
      },
      searchValue: ""
    };
    return _this2;
  }

  var _proto = RySelectSingleContent.prototype;

  _proto.render = function render() {
    var _this3 = this;

    var stylePrefix = 'rj-rySelector';
    return React.createElement("div", null, React.createElement(Search, {
      placeholder: "\u8F93\u5165\u5173\u952E\u5B57\u641C\u7D22",
      suffix: this.state.searchValue !== '' ? React.createElement(Icon, {
        type: "close-circle",
        onClick: function onClick() {
          return onClickSearchClear.call(_this3);
        }
      }) : null,
      value: this.state.searchValue,
      onChange: function onChange(e) {
        return _this3.setState({
          searchValue: e.target.value
        });
      },
      onDelayChange: function onDelayChange(value) {
        return onChangeSearch.call(_this3, value);
      }
    }), this.state.searchValue === "" ? React.createElement(Card, {
      style: {
        marginTop: 10
      },
      bodyStyle: {
        padding: '0 0 0 10px'
      }
    }, React.createElement(Scroll, {
      style: {
        height: 588
      }
    }, React.createElement(RyTree, {
      userRange: this.props.userRange,
      checkable: false,
      onChange: function onChange(selectedRys) {
        return onOkModal.call(_this3, selectedRys);
      }
    }))) : React.createElement("div", {
      style: {
        marginTop: 10
      }
    }, React.createElement(QueryList, {
      dataSource: this.state.tableData,
      pagination: this.state.pagination,
      onClick: function onClick(item) {
        return onClickList.call(_this3, item.id, item.username, item.nickname, item.rybs, item.orgName, item.departmentName, item.fyfjm, item.bmbs);
      }
    })));
  };

  return RySelectSingleContent;
}(Component);

RySelectSingleContent.propTypes = {
  userRange: PropTypes.number,
  onSelect: PropTypes.func.isRequired
};
RySelectSingleContent.defaultProps = {
  userRange: 3
};
export default RySelectSingleContent;