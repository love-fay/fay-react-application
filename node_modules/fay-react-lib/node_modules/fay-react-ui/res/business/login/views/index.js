import _inheritsLoose from "@babel/runtime-corejs2/helpers/inheritsLoose";
import _assertThisInitialized from "@babel/runtime-corejs2/helpers/assertThisInitialized";
import _defineProperty from "@babel/runtime-corejs2/helpers/defineProperty";
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import Form from '../../../../form';
import Tabs from '../../../../tabs';
import Icon from '../../../../icon';
import Input from '../../../../input';
import Alert from '../../../../alert';
import Button from '../../../../button';
import Checkbox from '../../../../checkbox';
import Scroll from '../../../own/customScroll';
import '../style/index.less';
import { userLogin, selectCert, loadLoginInfo } from "../api/login";
import { ieVersion } from "../api/ieVersion";
import FyTreeSelect from './fyTreeSelect';
var FormItem = Form.Item;
var TabPane = Tabs.TabPane;
var stylePrefix = 'rj-login';

var Login =
/*#__PURE__*/
function (_Component) {
  _inheritsLoose(Login, _Component);

  function Login(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "mount", false);

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "handleUnifiedUserLogin", function (e) {
      e.preventDefault();

      _this.props.form.validateFields(function (err, values) {
        if (!err) {
          _this.setState({
            loading: true,
            showMessage: 'none',
            message: '',
            messageType: ''
          });

          var fyfjm = values.fyfjm,
              username = values.username,
              password = values.password,
              remember = values.remember;
          var data = {
            username: username + "&" + fyfjm,
            password: password
          };
          var successLogin = _this.props.successLogin;
          userLogin({
            usernamePasswordAuthenticationModel: data
          }, remember, successLogin, function (loginMessage) {
            if (loginMessage === void 0) {
              loginMessage = {};
            }

            if (loginMessage.err) {
              _this.setState({
                showMessage: 'block',
                message: loginMessage.err,
                messageType: 'error',
                loading: false
              });
            } else {
              if (_this.mount) {
                _this.setState({
                  loading: false
                });
              }
            }
          });
        } else {
          e.preventDefault();
        }
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onChange", function () {
      _this.setState({
        showMessage: 'none',
        message: '',
        messageType: ''
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "handleFyChange", function (value) {
      _this.setState({
        fy: value
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "controlDownload", function () {
      window.open(window.location.origin + '/problem', '_blank');
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "caLogin", function () {
      if (window.ActiveXObject || "ActiveXObject" in window) {
        var objSignXObject = ieVersion() === 11 ? _this.activex : new ActiveXObject("SignX.SignXObject");
        var successLogin = _this.props.successLogin;

        _this.setState({
          caLoding: true,
          caMessage: '',
          caMessageType: '',
          caShowMessage: 'none'
        });

        selectCert(objSignXObject, successLogin, function (loginMessage) {
          if (loginMessage === void 0) {
            loginMessage = {};
          }

          if (loginMessage.err) {
            _this.setState({
              caShowMessage: 'block',
              caMessage: loginMessage.err,
              caMessageType: 'error',
              caLoding: false
            });
          } else {
            if (_this.mount) {
              _this.setState({
                caLoding: false
              });
            }
          }
        });
      } else {
        _this.setState({
          caShowMessage: 'block',
          caMessage: '请您使用 ie 浏览器，进行CA登录!',
          caMessageType: 'error',
          caLoding: false
        });
      }
    });

    _this.state = {
      loading: false,
      message: '',
      messageType: '',
      showMessage: 'none',
      caLoding: false,
      caMessage: '',
      caMessageType: '',
      caShowMessage: 'none',
      fy: undefined
    };
    return _this;
  }

  var _proto = Login.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.mount = true;
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.mount = false;
  };

  _proto.render = function render() {
    var _this2 = this;

    var getFieldDecorator = this.props.form.getFieldDecorator;
    var title = this.props.title; //let info = loadLoginInfo() !== "" ? JSON.parse(loadLoginInfo()) : undefined;

    var info = loadLoginInfo();
    return React.createElement(Scroll, {
      className: stylePrefix
    }, React.createElement("h1", {
      className: stylePrefix + '-title'
    }, title), React.createElement(Tabs, {
      type: "card",
      className: stylePrefix + '-tabs'
    }, React.createElement(TabPane, {
      tab: "\u666E\u901A\u767B\u5F55",
      key: "mima"
    }, React.createElement(Form, {
      onSubmit: this.handleUnifiedUserLogin,
      className: stylePrefix + "-form"
    }, React.createElement(FormItem, null, getFieldDecorator('fyfjm', {
      rules: [{
        required: true,
        message: '请选择法院'
      }],
      initialValue: info && info.fyfjm
    })(React.createElement(FyTreeSelect, {
      allowClear: true,
      placeholder: "\u6CD5\u9662",
      onChange: this.handleFyChange
    }))), React.createElement(FormItem, null, getFieldDecorator('username', {
      rules: [{
        required: true,
        message: '请输入账号'
      }],
      initialValue: info && info.username
    })(React.createElement(Input, {
      prefix: React.createElement(Icon, {
        type: "user",
        style: {
          color: '#999',
          fontSize: 18
        }
      }),
      placeholder: "\u8D26\u53F7",
      onChange: this.onChange
    }))), React.createElement(FormItem, {
      style: {
        marginBottom: 10
      }
    }, getFieldDecorator('password', {
      rules: [{
        required: true,
        message: '请输入密码'
      }],
      initialValue: info && info.password
    })(React.createElement(Input, {
      prefix: React.createElement(Icon, {
        type: "lock",
        style: {
          color: '#999',
          fontSize: 18
        }
      }),
      type: "password",
      placeholder: "\u5BC6\u7801",
      onChange: this.onChange
    }))), React.createElement(FormItem, {
      style: {
        marginBottom: 10
      }
    }, React.createElement(Alert, {
      style: {
        display: this.state.showMessage
      },
      message: this.state.message,
      type: this.state.messageType,
      showIcon: true
    }), getFieldDecorator('remember', {
      valuePropName: 'checked',
      initialValue: false
    })(React.createElement(Checkbox, {
      style: {
        marginLeft: 3
      }
    }, "\u8BB0\u4F4F\u6211"))), React.createElement(FormItem, {
      style: {
        marginBottom: 0
      }
    }, React.createElement(Button, {
      type: "primary",
      htmlType: "submit",
      className: stylePrefix + '-loginFormButton',
      loading: this.state.loading
    }, "\u767B\u5F55")))), React.createElement(TabPane, {
      tab: "CA\u767B\u5F55",
      key: "zhengshu"
    }, React.createElement("a", {
      href: "http://205.0.0.19/feichongzheng/software/raw/master/resourceDownload/caDriver.exe",
      download: "caDriver",
      className: stylePrefix + '-downloadBtn'
    }, "Ukey\u9A71\u52A8\u4E0B\u8F7D\u5B89\u88C5"), React.createElement("a", {
      href: "http://205.0.0.19/feichongzheng/software/raw/master/resourceDownload/caV2.0.2.exe",
      download: "caV2.0.2",
      className: stylePrefix + '-downloadBtn'
    }, "CA\u8BA4\u8BC1\u63A7\u4EF6\u4E0B\u8F7D\u5B89\u88C5"), React.createElement(Alert, {
      style: {
        display: this.state.caShowMessage
      },
      message: this.state.caMessage,
      type: this.state.caMessageType,
      showIcon: true
    }), React.createElement("p", {
      className: stylePrefix + '-tip'
    }, React.createElement(Icon, {
      type: "info-circle",
      style: {
        fontSize: 16,
        verticalAlign: 'middle',
        marginRight: 5
      }
    }), React.createElement("span", null, "\u5B89\u88C5\u5B8C\u6210\u540E\u9700\u8981\u5237\u65B0\u9875\u9762")), React.createElement(Button, {
      type: "primary",
      className: stylePrefix + '-loginFormButton',
      loading: this.state.caLoding,
      onClick: this.caLogin
    }, "\u767B\u5F55"))), ieVersion() === 11 ? React.createElement("object", {
      ref: function ref(node) {
        return _this2.activex = node;
      },
      id: "activex",
      classID: "clsid:E321B462-A179-40B4-9233-39341547D123",
      height: "0",
      width: "0"
    }) : '', React.createElement("p", {
      className: stylePrefix + '-footer'
    }, React.createElement("a", {
      className: stylePrefix + '-control-download',
      onClick: this.controlDownload
    }, " \u63A7\u4EF6\u4E0B\u8F7D"), React.createElement("span", null, "\u6280\u672F\u652F\u6301\uFF1A\u798F\u5EFA\u6995\u57FA\u8F6F\u4EF6\u80A1\u4EFD\u6709\u9650\u516C\u53F8"), React.createElement("span", null, "\u670D\u52A1\u70ED\u7EBF\uFF1A0591-87087671,87087780"), React.createElement("span", null, "\u8FD0\u7EF4\u6295\u8BC9\uFF1A0591-87087724")));
  };

  return Login;
}(Component);

Login.propTypes = {
  successLogin: PropTypes.func.isRequired,
  controlDownload: PropTypes.func,
  title: PropTypes.string.isRequired
};
Login.defaultProps = {
  title: '福建法院审判信息系统'
};
export default Form.create()(Login);