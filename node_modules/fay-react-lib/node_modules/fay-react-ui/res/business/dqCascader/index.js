import _inheritsLoose from "@babel/runtime-corejs2/helpers/inheritsLoose";
import _assertThisInitialized from "@babel/runtime-corejs2/helpers/assertThisInitialized";
import _defineProperty from "@babel/runtime-corejs2/helpers/defineProperty";
import React, { Component } from 'react';
import Cascader from '../../../cascader';
import dqData from './dqData';
var treeData = dqData.data;
import PropTypes from 'prop-types';

var DqCascader =
/*#__PURE__*/
function (_Component) {
  _inheritsLoose(DqCascader, _Component);

  function DqCascader() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Component.call.apply(_Component, [this].concat(args)) || this;

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "filterSelectNode", function (value, node) {
      return node.props.title.indexOf(value) > -1;
    });

    return _this;
  }

  var _proto = DqCascader.prototype;

  _proto.render = function render() {
    var _this$props = this.props,
        _this$props$style = _this$props.style,
        style = _this$props$style === void 0 ? {
      width: 300
    } : _this$props$style,
        _this$props$showSearc = _this$props.showSearch,
        showSearch = _this$props$showSearc === void 0 ? true : _this$props$showSearc,
        onChange = _this$props.onChange,
        value = _this$props.value;
    return React.createElement(Cascader, {
      value: value,
      style: style,
      options: treeData,
      onChange: onChange,
      placeholder: "\u8BF7\u9009\u62E9",
      showSearch: showSearch
    });
  };

  return DqCascader;
}(Component);

DqCascader.propTypes = {
  style: PropTypes.object,
  showSearch: PropTypes.bool,
  onChange: PropTypes.func,
  value: PropTypes.oneOfType([PropTypes.string, PropTypes.array])
};
export default DqCascader;